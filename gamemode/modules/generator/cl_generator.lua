-- gamemode/modules/generator/cl_generator.lua

if not NextRP.Generator:IsMapEnabled() then return end

-- –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
NextRP.Generator.FuelLevel = 100
NextRP.Generator.PlayerCrystals = 0

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —É—Ä–æ–≤–Ω—è —Ç–æ–ø–ª–∏–≤–∞
net.Receive("Generator_UpdateFuel", function()
    NextRP.Generator.FuelLevel = net.ReadFloat()
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º HUD –µ—Å–ª–∏ –µ—Å—Ç—å
    if NextRP.Generator.UpdateHUD then
        NextRP.Generator:UpdateHUD()
    end
end)

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –∏–≥—Ä–æ–∫–∞
net.Receive("Generator_UpdatePlayerCrystals", function()
    NextRP.Generator.PlayerCrystals = net.ReadInt(32)
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º HUD –µ—Å–ª–∏ –µ—Å—Ç—å
    if NextRP.Generator.UpdateHUD then
        NextRP.Generator:UpdateHUD()
    end
end)

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –≤ –∂–∏–ª–∞—Ö
net.Receive("Generator_UpdateVeinCrystals", function()
    local veinID = net.ReadInt(32)
    local crystalAmount = net.ReadInt(32)
    
    -- –ù–∞–π–¥–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∂–∏–ª—É –∏ –æ–±–Ω–æ–≤–∏–º –µ—ë –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
    for _, ent in pairs(ents.FindByClass("nextrp_crystal_vein")) do
        if IsValid(ent) and ent.VeinID == veinID then
            ent:SetNWInt("CrystalAmount", crystalAmount)
            break
        end
    end
end)

-- –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
net.Receive("Generator_OpenMenu", function()
    NextRP.Generator:OpenMenu()
end)

-- –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
function NextRP.Generator:OpenMenu()
    if IsValid(NextRP.Generator.MenuPanel) then
        NextRP.Generator.MenuPanel:Remove()
    end
    
    local frame = vgui.Create("DFrame")
    frame:SetSize(600, 400)
    frame:Center()
    frame:SetTitle("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º")
    frame:SetVisible(true)
    frame:SetDraggable(true)
    frame:ShowCloseButton(true)
    frame:MakePopup()
    
    NextRP.Generator.MenuPanel = frame
    
    -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–µ
    local infoPanel = vgui.Create("DPanel", frame)
    infoPanel:SetPos(10, 30)
    infoPanel:SetSize(580, 100)
    infoPanel.Paint = function(self, w, h)
        draw.RoundedBox(4, 0, 0, w, h, Color(50, 50, 50, 200))
        
        -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
        draw.SimpleText("–°–æ—Å—Ç–æ—è–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞", "DermaLarge", w/2, 10, Color(255, 255, 255), TEXT_ALIGN_CENTER)
        
        -- –£—Ä–æ–≤–µ–Ω—å —Ç–æ–ø–ª–∏–≤–∞
        local fuelText = "–£—Ä–æ–≤–µ–Ω—å —Ç–æ–ø–ª–∏–≤–∞: " .. math.Round(NextRP.Generator.FuelLevel, 1) .. "%"
        local fuelColor = Color(0, 255, 0)
        if NextRP.Generator.FuelLevel <= 10 then
            fuelColor = Color(255, 0, 0)
        elseif NextRP.Generator.FuelLevel <= 25 then
            fuelColor = Color(255, 255, 0)
        end
        
        draw.SimpleText(fuelText, "DermaDefault", w/2, 40, fuelColor, TEXT_ALIGN_CENTER)
        
        -- –ü–æ–ª–æ—Å–∞ —Ç–æ–ø–ª–∏–≤–∞
        local barW, barH = 400, 20
        local barX, barY = w/2 - barW/2, 65
        
        draw.RoundedBox(4, barX, barY, barW, barH, Color(30, 30, 30))
        
        if NextRP.Generator.FuelLevel > 0 then
            local fillWidth = (barW - 4) * (NextRP.Generator.FuelLevel / 100)
            draw.RoundedBox(4, barX + 2, barY + 2, fillWidth, barH - 4, fuelColor)
        end
    end
    
    -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞—Ö –∏–≥—Ä–æ–∫–∞
    local crystalPanel = vgui.Create("DPanel", frame)
    crystalPanel:SetPos(10, 140)
    crystalPanel:SetSize(580, 80)
    crystalPanel.Paint = function(self, w, h)
        draw.RoundedBox(4, 0, 0, w, h, Color(50, 50, 50, 200))
        
        -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
        draw.SimpleText("–í–∞—à–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã", "DermaLarge", w/2, 10, Color(255, 255, 255), TEXT_ALIGN_CENTER)
        
        -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
        local crystalText = NextRP.Generator.PlayerCrystals .. "/" .. NextRP.Generator.Config.Crystals.MaxPlayerCrystals
        local crystalColor = Color(100, 200, 255)
        if NextRP.Generator.PlayerCrystals == 0 then
            crystalColor = Color(255, 100, 100)
        elseif NextRP.Generator.PlayerCrystals >= NextRP.Generator.Config.Crystals.MaxPlayerCrystals then
            crystalColor = Color(255, 255, 100)
        end
        
        draw.SimpleText("üíé " .. crystalText, "DermaDefault", w/2, 45, crystalColor, TEXT_ALIGN_CENTER)
    end
    
    -- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    local buttonPanel = vgui.Create("DPanel", frame)
    buttonPanel:SetPos(10, 230)
    buttonPanel:SetSize(580, 160)
    buttonPanel.Paint = function(self, w, h)
        draw.RoundedBox(4, 0, 0, w, h, Color(50, 50, 50, 200))
    end
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—Ä–∞–≤–∫–∏
    local refuelBtn = vgui.Create("DButton", buttonPanel)
    refuelBtn:SetText("–ó–∞–ø—Ä–∞–≤–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (1 –∫—Ä–∏—Å—Ç–∞–ª–ª)")
    refuelBtn:SetPos(10, 10)
    refuelBtn:SetSize(560, 30)
    refuelBtn.DoClick = function()
        -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—Ä–∞–≤–∫—É
        RunConsoleCommand("say", "/refuel")
        frame:Close()
    end
    
    -- –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
    local statusBtn = vgui.Create("DButton", buttonPanel)
    statusBtn:SetText("–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
    statusBtn:SetPos(10, 50)
    statusBtn:SetSize(270, 30)
    statusBtn.DoClick = function()
        net.Start("Generator_RequestData")
        net.SendToServer()
    end
    
    -- –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
    local crystalsBtn = vgui.Create("DButton", buttonPanel)
    crystalsBtn:SetText("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã")
    crystalsBtn:SetPos(300, 50)
    crystalsBtn:SetSize(270, 30)
    crystalsBtn.DoClick = function()
        RunConsoleCommand("crystals")
    end
    
    -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∂–∏–ª–∞—Ö
    local veinInfo = vgui.Create("DLabel", buttonPanel)
    veinInfo:SetPos(10, 90)
    veinInfo:SetSize(560, 60)
    veinInfo:SetText("–î–ª—è –¥–æ–±—ã—á–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞–π–¥–∏—Ç–µ –∂–∏–ª—ã –Ω–∞ –∫–∞—Ä—Ç–µ –∏ –Ω–∞–∂–º–∏—Ç–µ E —Ä—è–¥–æ–º —Å –Ω–∏–º–∏.\n–í—Ä–µ–º—è –¥–æ–±—ã—á–∏: " .. NextRP.Generator.Config.Crystals.MiningTime .. " —Å–µ–∫.\n–í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∂–∏–ª—ã: " .. math.floor(NextRP.Generator.Config.Crystals.RestoreTime / 60) .. " –º–∏–Ω.")
    veinInfo:SetWrap(true)
    veinInfo:SetTextColor(Color(200, 200, 200))
end

-- HUD –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
local function DrawGeneratorHUD()
    if not NextRP.Generator:IsMapEnabled() then return end
    
    local scrW, scrH = ScrW(), ScrH()
    
    -- –ü–∞–Ω–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
    local panelW, panelH = 300, 120
    local panelX, panelY = scrW - panelW - 20, 20
    
    -- –§–æ–Ω –ø–∞–Ω–µ–ª–∏
    draw.RoundedBox(8, panelX, panelY, panelW, panelH, Color(0, 0, 0, 150))
    draw.RoundedBox(8, panelX + 2, panelY + 2, panelW - 4, panelH - 4, Color(30, 30, 30, 200))
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    draw.SimpleText("‚ö° –ì–ï–ù–ï–†–ê–¢–û–†", "DermaLarge", panelX + panelW/2, panelY + 10, Color(255, 255, 255), TEXT_ALIGN_CENTER)
    
    -- –£—Ä–æ–≤–µ–Ω—å —Ç–æ–ø–ª–∏–≤–∞
    local fuelText = "–ó–∞—Ä—è–¥: " .. math.Round(NextRP.Generator.FuelLevel, 1) .. "%"
    local fuelColor = Color(0, 255, 0)
    if NextRP.Generator.FuelLevel <= 10 then
        fuelColor = Color(255, 0, 0)
    elseif NextRP.Generator.FuelLevel <= 25 then
        fuelColor = Color(255, 255, 0)
    end
    
    draw.SimpleText(fuelText, "DermaDefault", panelX + panelW/2, panelY + 35, fuelColor, TEXT_ALIGN_CENTER)
    
    -- –ü–æ–ª–æ—Å–∞ —Ç–æ–ø–ª–∏–≤–∞
    local barW, barH = panelW - 40, 15
    local barX, barY = panelX + 20, panelY + 55
    
    draw.RoundedBox(4, barX, barY, barW, barH, Color(60, 60, 60))
    
    if NextRP.Generator.FuelLevel > 0 then
        local fillWidth = (barW - 2) * (NextRP.Generator.FuelLevel / 100)
        draw.RoundedBox(4, barX + 1, barY + 1, fillWidth, barH - 2, fuelColor)
    end
    
    -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
    local crystalText = "üíé –ö—Ä–∏—Å—Ç–∞–ª–ª—ã: " .. NextRP.Generator.PlayerCrystals .. "/" .. NextRP.Generator.Config.Crystals.MaxPlayerCrystals
    local crystalColor = Color(100, 200, 255)
    if NextRP.Generator.PlayerCrystals == 0 then
        crystalColor = Color(200, 200, 200)
    end
    
    draw.SimpleText(crystalText, "DermaDefault", panelX + panelW/2, panelY + 80, crystalColor, TEXT_ALIGN_CENTER)
    
    -- –ü–æ–¥—Å–∫–∞–∑–∫–∞
    draw.SimpleText("F4 -> –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "DermaDefaultBold", panelX + panelW/2, panelY + 100, Color(200, 200, 200), TEXT_ALIGN_CENTER)
end

-- –î–æ–±–∞–≤–ª—è–µ–º HUD
hook.Add("HUDPaint", "GeneratorHUD", DrawGeneratorHUD)

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è HUD
function NextRP.Generator:UpdateHUD()
    -- HUD –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ DrawGeneratorHUD
end

-- –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
hook.Add("InitPostEntity", "Generator_RequestData", function()
    timer.Simple(2, function()
        if NextRP.Generator:IsMapEnabled() then
            net.Start("Generator_RequestData")
            net.SendToServer()
        end
    end)
end)

-- –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é —á–µ—Ä–µ–∑ F4
hook.Add("ShowSpare2", "GeneratorMenu", function()
    if NextRP.Generator:IsMapEnabled() then
        NextRP.Generator:OpenMenu()
        return true
    end
end)

print("[Generator] –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è —á–∞—Å—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞")